# Generated by Django 5.2.4 on 2025-07-17 13:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoachingRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('study_plan', 'Çalışma Planı'), ('topic_focus', 'Konu Odaklı'), ('time_management', 'Zaman Yönetimi'), ('practice_more', 'Daha Fazla Pratik'), ('review_weak', 'Zayıf Konuları Gözden Geçir')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority_score', models.IntegerField(default=50)),
                ('is_read', models.BooleanField(default=False)),
                ('is_applied', models.BooleanField(default=False)),
                ('valid_until', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Koçluk Önerisi',
                'verbose_name_plural': 'Koçluk Önerileri',
                'db_table': 'coaching_recommendations',
                'ordering': ['-priority_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('critical', 'Kritik')], default='medium', max_length=10)),
                ('target_date', models.DateField()),
                ('estimated_hours', models.IntegerField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Çalışma Planı',
                'verbose_name_plural': 'Çalışma Planları',
                'db_table': 'study_plans',
                'ordering': ['target_date', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='SubjectPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_time_per_question', models.FloatField(default=0.0)),
                ('weak_topics', models.JSONField(default=list)),
                ('strong_topics', models.JSONField(default=list)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ders Performansı',
                'verbose_name_plural': 'Ders Performansları',
                'db_table': 'subject_performances',
            },
        ),
        migrations.CreateModel(
            name='UserExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_questions', models.IntegerField()),
                ('correct_answers', models.IntegerField(default=0)),
                ('wrong_answers', models.IntegerField(default=0)),
                ('empty_answers', models.IntegerField(default=0)),
                ('score', models.FloatField(default=0.0)),
                ('duration_minutes', models.IntegerField()),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sınav Denemesi',
                'verbose_name_plural': 'Sınav Denemeleri',
                'db_table': 'user_exam_attempts',
                'ordering': ['-completed_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_study_hours', models.FloatField(default=0.0)),
                ('total_questions_solved', models.IntegerField(default=0)),
                ('current_level', models.CharField(default='Başlangıç', max_length=50)),
                ('target_score', models.IntegerField(blank=True, null=True)),
                ('last_exam_score', models.FloatField(blank=True, null=True)),
                ('streak_days', models.IntegerField(default=0)),
                ('last_study_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Kullanıcı İlerlemesi',
                'verbose_name_plural': 'Kullanıcı İlerlemeleri',
                'db_table': 'user_progress',
            },
        ),
        migrations.CreateModel(
            name='UserQuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.CharField(blank=True, max_length=10)),
                ('is_correct', models.BooleanField(default=False)),
                ('time_spent_seconds', models.IntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_question_answers',
            },
        ),
    ]
